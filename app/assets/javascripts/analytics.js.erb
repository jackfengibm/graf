<% require 'constants' %>
CHART_COLORS = <%= Constants.get_chart_colors.to_json %>;
METRICS = <%= Constants.metrics.to_json %>;
FILTERS = <%= Constants.filters.to_json %>;
MONTH_NAMES = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];

ANALYTICS_TABLE_OPTIONS = {
  "sScrollY": "350px",
  //"sScrollX": "800px",
  "bPaginate": false,
  "bAutoWidth" : true,
  "bFilter": true,
  "bSort" : false,
  //"aaSorting": [[ 1, "desc" ]]
};

PIE_OPTIONS = {
  series: {
    pie: {
      show: true,
      radius: 1,
      label: {
        show: true,
        radius: 2/3,
        formatter: function(label, series){
          return '<div style="font-size:8pt;text-align:center;padding:2px;color:white;">'+label+'<br/>'+Math.round(series.percent)+'%</div>';
        },
        threshold: 0.04
      }      
    }
  },
  legend: {
    labelBoxBorderColor: "none",
    backgroundOpacity: 0.5,
    noColumns: 2
  }
};
PIE_OPTIONS.colors = CHART_COLORS;


LINE_OPTIONS = {
  series: {
    lines: {
      show: true
    },
    points: {
      show: true
    }
  },
  xaxis: {
    //mode: "time",
    tickFormatter: function(x) { 
      console.log(x)
      date = new Date(x*1000);
      month = MONTH_NAMES[date.getMonth()] ;
      year = date.getFullYear();
      return month + " " + year
     }
  },
  legend: {
    position: "nw",
    noColumns: 3
  },
  yaxis: {
    minTickSize: 5
  },
  grid: {
        hoverable: true,
        borderWidth: 1
  }
};

LINE_OPTIONS.colors = CHART_COLORS;

function analyticsAJAX(data, format, responseType, callback){
  data.format = format
  $.ajax({
      url: "analytics_data",
      data: data,
      method: 'POST',
      dataType: responseType,
      success: callback,
      error: function(XMLHttpRequest, textStatus, errorThrown) { 
        alert("Status: " + textStatus); alert("Error: " + errorThrown); 
    }       
  });
}

function parsePieToBar(data) {
  points = [];
  ticks = [];
  for (i = 0 ; i < data.length ; i++) {
     points.push(Array(data[i].data, i));  //Array(i, data[i].data));
     ticks.push(Array(data[i].label, i)); //Array(i, data[i].label));
  }

  data = [{
    data: points,
    minTickSize: 1,
    bars: { 
      show: true,
      horizontal: true, 
      align: "center" 
    }         
  }];
  ticks.forEach(function(arr) {arr.reverse()});
  //console.log(JSON.stringify(data))
  //console.log(JSON.stringify(ticks))
  options = {
    yaxis: {      
      ticks: ticks
    }
  };
  options.colors = CHART_COLORS;
  return {data: data, options: options};
}

function restrictSearchCriteria() {
  // TODO: Refactor to use METRICS
  // Restrict the group by and filter for state
  if (($("#metric_filter").val() != "prs") && ($("#metric_filter").val() != "avg_days_open")) {
    $("#state_filter").val(""); // Reset state filter to default value
    $("#state_filter").multiselect().multiselect('disable'); // Disable state filter
    $("#group_by_filter option[value=state]").attr('disabled', true); // Disable state option in "Group By" filter
    $("#group_by_filter").multiselect({multiple: false, header: "Select an option", selectedList: 1 }).multiselect('refresh'); 
  }     
  else {
    $("#state_filter").multiselect().multiselect('enable'); // Enable state filter
    $("#group_by_filter option[value=state]").attr('disabled', false); // Enable state option in "Group By" filter
    $("#group_by_filter").multiselect({multiple: false, header: "Select an option", selectedList: 1 }).multiselect('refresh'); 
  }

  // TODO: WE NEED THIS??
  // If Commits then restrict???
  // if (($("#metric_filter").val() == "commits") || ($("#metric_filter").val() == "percent_merged")) {
  //   $("#group_by_filter").val("company") 
  //   $("#state_filter").val("")
  //   $("#group_by_filter").multiselect('refresh'); 
  //   $("#state_filter").multiselect('refresh'); 
  // }
}

function restrictChartViews() {
  // TODO: Refactor to use METRICS
  // Restrict view type
  if (($("#metric_filter").val() != "prs") && ($("#metric_filter").val() != "commits") && ($("#metric_filter").val() != "avg_days_open"))  {
    $("#view_type").val("bar"); // Set to bar view
    $("#view_type").multiselect({multiple: false, header: "Select an option", selectedList: 1 }).multiselect('refresh');
    $("#view_type option[value=line]").attr('disabled','disabled'); // Disable line option in "View by" button
    $("#view_type option[value=pie]").attr('disabled','disabled');
    $("#view_type").multiselect('refresh'); 
  }
  else {
    $("#view_type option[value=line]").removeAttr('disabled'); // Enable line option in "View by" button
    $("#view_type option[value=pie]").removeAttr('disabled');
    $("#view_type").multiselect().multiselect('refresh');
  }
}
